-> Saber a versão do docker
	docker --version 

-> Baixar imagens no docker
	docker pull ubuntu;
	docker pull "nome do pacote"

-> Listando imagens baixadas
	docker images

-> Executando os containers
	docker run
	docker run -i -t ubuntu
	docker rut -it ubuntu

-> Listar containers em execução
	docker ps

-> Listar containers qu existem mas foram encerrados
	docker ps -a
	sudo docker container ls
	

-> Remover containers 
	docker rm "id do container OU nome do container"

-> Saber se deu certo
	docker run hello-world

-> Parar de executar um container 
	docker stop "nome ou id do container"

->Voltar a executar o container
	docker start "nome ou id do container"

-> Pausar um container
	docker pause "nome do container"

-> Despausar um container
	docker unpause "nome do container"

-> Executar um container já criado
	docker exec "nome do container"

-> Comando menos -P (mapear a porta do container que vai refletir no local host do meu navegador)
	docker run -d -p 8080:80 "nome do container" 

-> Exibir como o mapeamento de portas de um container está sendo feito.
	docker port

-> Listar as imagens do docker
	docker images

-> Descrever uma imagem docker
	docker inspect "id da imagem"

-> Mostra as imagens dependentes da camada
	docker history "id da imagem"

-> A imagem é read only, já o container é read and write

-> Vários containers podem ter a mesma imagem, apenas mudando a camada read/write

-> Criar uma imagem a partir de um arquivo
	docker build -t exemplo/app-node:1 .
	docker build (nome da imagem):(versão) (diretório que está a docker file)

-> Para todas as imagens pegando pela listagem de imagens executadas
	docker stop $(docker container ls -q)

-> Executar a imagem na porta 8080
	docker run -p 8080:3000 -d (nome do user)/(app-node)

-> Dar run na aplicação
	docker run -d leticiaperotti/app-node:1.2

ARG -> apenas no momento de build
ENV -> fica uma variável disponivel para o container

-> Colocar imagem no docker hub
	docker push leticiaperotti/app-node:1.0

-> Duplicar uma imagem
	docker tag (nome da imagem antiga) (nome da nova imagem)

-> Remover todos os container (mesmos parados)
	docker container rm $(docker container ls -aq)

-> Remover todas as imagens 
	docker rmi $(docker images ls -aq) --force

-> Ver o tamanho do container
	docker container ps -s

-> Tamanho virtual do container é tamanho total da imagem

-> Persistir dados localmente
	docker run -it -v (caminho) : app ubuntu
	Usando o mouth que é mais semantico
	docker run -it --mount type=bind,source=.,target=/app ubuntu bash

-> Criar um volume docker
	 docker volume create meu-volume

-> Usar o volume no docker run
	docker run -it -v meu-volume:/app ubuntu bash

-> --tmpfs só da no linux
	Persiste dados em host sem armazenar no read e write (em memória)
	docker run -it --mount type=tmpfs,destination=/app ubuntu bash


-> Inspecinar o container
	docker inspect (id)

